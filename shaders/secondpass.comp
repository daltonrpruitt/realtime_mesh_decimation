#version 430
//#extension GL_Nvshader_atomic_float : enable


#define X %%X%%
#define Y %%Y%%
#define Z %%Z%%

// Workgroup Sizes
layout(local_size_x=1, local_size_y=1, local_size_z=1) in;


layout(std430, binding=0) buffer inVerts
{
    vec3 vertices[];
};

layout(std430, binding=1) buffer inIndices
{
    uvec3 indices[];
};

layout(std430, binding=2) buffer vert_cluster_id
{
    uint vert_cluster_ids[];
};

layout(r32i, binding = 4) uniform iimage2D cluster_quadric_map;
layout(rgba32f, binding = 5) uniform image2D cluster_vertex_position;

float determinant_minimum = 1.0E-10;
uniform int resolution;
uint u_resolution = uint(resolution);


void main() {
    uint g_id = gl_GlobalInvocationID.z * u_resolution * u_resolution +
                gl_GlobalInvocationID.y * u_resolution +
                gl_GlobalInvocationID.x;  // Equivalent to cell ID, too
    ivec2 output_index = ivec2(gl_GlobalInvocationID.xy); 
    

    // Get values for error quadric matrix (assemble)


    // Compute optimal vertex position from error quadric matrix (invert)


    // Check if "singular" (determinant < determinant_minimum)

        // Use avg vertex position if so

        // Use computed vertex position otherwise

    // Save position to output



    }
}
